{"version":3,"file":"static/js/401.7b76d76c.chunk.js","mappings":"iNACA,EAAsE,sCAAtE,EAAwH,qC,kBCuCxH,EApCqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiBC,EAEvB,OACE,8BACGJ,IACC,0BACE,eAAIK,UAAWC,EAAf,SACGN,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAAC,KAAD,CACEL,UAAWC,EACXK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMZ,GAHjB,WAKE,gBACEa,IACEL,EAjBR,kCAiB6BM,OAAON,GAAeN,EAE7Ca,IAAKN,EACLO,MAAM,MACNC,OAAO,SAET,wBAAKR,QAdAF,EADC,SAwBvB,E,kBCrCD,EAA4B,8BAA5B,EAAoE,4BCkBpE,EAjBmB,SAAC,GAAkB,IAAhBW,EAAe,EAAfA,SACpB,OACE,+BACE,kBAAMA,SAAUA,EAAhB,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACblB,YAAY,cACZC,UAAWC,KAEb,mBAAQD,UAAWC,EAAnB,wBAIP,ECiCD,EA5Ce,WAAO,IAAD,EACnB,GAAwCiB,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAiC3C,OAbAC,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,GAAeH,GAAOI,MAAK,SAAAC,GACzB,IAAKA,EAAKC,QAAQC,OAChB,OAAOC,MAAM,mBAEfZ,EAAgBS,EAAKC,QACtB,GACF,GAAE,CAACN,KAGF,4BACE,SAAC,EAAD,CAAYV,SAjCK,SAAAmB,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cACfC,EAAaF,EAAWG,SAASd,MAAMe,MAExCF,GAKc,KAAfA,GACFd,EAAgB,CAAC,GAEnBA,EAAgB,CAAEC,MAAOa,IAEzBF,EAAWK,SATTR,MAAM,2BAUT,IAkBIb,IAAgB,SAAC,EAAD,CAAcxB,OAAQwB,MAG5C,C,8LCpCKsB,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAXc,+BAYdC,OAAQ,CACNC,QAZY,mCAaZC,SAZa,WAgBJC,EAAW,mCAAG,sGACFN,EAfL,uBAcO,uBACjBZ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXF,EAAc,mCAAG,WAAMH,GAAN,yFACLiB,EAnBP,gBAmB2B,CACzCG,OAAQ,CACNpB,MAAOA,KAHiB,uBACpBK,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdmB,EAAU,mCAAG,WAAMC,GAAN,kFAClBC,EADkB,iBACKD,GADL,SAGDR,EAASS,GAHR,uBAGhBrB,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,sDAOVsB,EAAU,mCAAG,WAAMF,GAAN,kFAClBG,EADkB,iBACKH,EADL,qBAGDR,EAASW,GAHR,uBAGhBvB,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,sDAOVwB,EAAU,mCAAG,WAAMJ,GAAN,kFAClBK,EADkB,iBACKL,EADL,qBAGDR,EAASa,GAHR,uBAGhBzB,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchedMovieList/SearchedMovieList.module.css?9d46","components/SearchedMovieList/SearchedMovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"SearchedMovieList_title__HK+Mb\",\"moviesList\":\"SearchedMovieList_moviesList__VYtIC\",\"movieItem\":\"SearchedMovieList_movieItem__277tO\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './SearchedMovieList.module.css';\nimport placeholder from '../../imgs/posterPlaceholder.jpg';\n\nconst SearchedList = ({ movies }) => {\n  const location = useLocation();\n  const imgUrl = `https://image.tmdb.org/t/p/w400`;\n  const imgPlaceholder = placeholder;\n\n  return (\n    <>\n      {movies && (\n        <div>\n          <ul className={css.moviesList}>\n            {movies.map(({ id, poster_path, title }) => (\n              <li key={id}>\n                <Link\n                  className={css.movieItem}\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                >\n                  <img\n                    src={\n                      poster_path ? imgUrl.concat(poster_path) : imgPlaceholder\n                    }\n                    alt={title}\n                    width=\"300\"\n                    height=\"450\"\n                  />\n                  <h3>{title}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SearchedList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formInput\":\"SearchForm_formInput__2FmZL\",\"formBtn\":\"SearchForm_formBtn__0vNuW\"};","import css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          placeholder=\"Enter movie\"\n          className={css.formInput}\n        />\n        <button className={css.formBtn}>Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import SearchedList from '../components/SearchedMovieList/SearchedMovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'service/fetchMovies';\nimport SearchForm from '../components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    const queryValue = searchForm.elements.query.value;\n\n    if (!queryValue) {\n      alert('Input your search query!');\n      return;\n    }\n\n    if (queryValue === '') {\n      setSearchParams({});\n    }\n    setSearchParams({ query: queryValue });\n\n    searchForm.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getMovieSearch(query).then(data => {\n      if (!data.results.length) {\n        return alert('No movies found');\n      }\n      setSearchResult(data.results);\n    });\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {searchResult && <SearchedList movies={searchResult} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a9fe09abb8f595fb2934da0c1fe008dc';\nconst language = 'en-US';\n\nconst trendingUrl = '/trending/movie/day';\nconst searchUrl = '/search/movie';\n// const detailsUrl = `/movie/${movieId}`;\n// const creditsUrl = `/movie/${movieId}/credits`;\n// const reviewsUrl = `/movie/${movieId}/reviews`;\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: API_KEY,\n    language: language,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance(trendingUrl);\n  return data;\n};\n\nexport const getMovieSearch = async query => {\n  const { data } = await instance(searchUrl, {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getDetails = async movieId => {\n  const detailsUrl = `/movie/${movieId}`;\n\n  const { data } = await instance(detailsUrl);\n  return data;\n};\n\nexport const getCredits = async movieId => {\n  const creditsUrl = `/movie/${movieId}/credits`;\n\n  const { data } = await instance(creditsUrl);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const reviewsUrl = `/movie/${movieId}/reviews`;\n\n  const { data } = await instance(reviewsUrl);\n  return data;\n};\n"],"names":["movies","location","useLocation","imgPlaceholder","placeholder","className","css","map","id","poster_path","title","to","state","from","src","concat","alt","width","height","onSubmit","type","name","autoComplete","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieSearch","then","data","results","length","alert","e","preventDefault","searchForm","currentTarget","queryValue","elements","value","reset","instance","axios","baseURL","params","api_key","language","getTrending","getDetails","movieId","detailsUrl","getCredits","creditsUrl","getReviews","reviewsUrl"],"sourceRoot":""}