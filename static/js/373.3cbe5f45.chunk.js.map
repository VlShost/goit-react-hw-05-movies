{"version":3,"file":"static/js/373.3cbe5f45.chunk.js","mappings":"mOACA,EAAwB,8BAAxB,EAAmE,mCAAnE,EAAkH,kC,kBCwClH,EArCmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiBC,EAEvB,OACE,8BACGJ,IACC,4BACE,eAAIK,UAAWC,EAAf,6BACA,eAAID,UAAWC,EAAf,SACGN,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAAC,KAAD,CACEL,UAAWC,EACXK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMZ,GAHjB,WAKE,gBACEa,IACEL,EAlBR,kCAkB6BM,OAAON,GAAeN,EAE7Ca,IAAKN,EACLO,MAAM,MACNC,OAAO,SAET,wBAAKR,QAdAF,EADC,UAwBvB,ECvBD,EAZa,WACX,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,MAAK,SAAAC,GACjBJ,EAAUI,EAAKC,QAChB,GACF,GAAE,KAEI,SAAC,EAAD,CAAY1B,OAAQoB,GAC5B,C,8LCFKO,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAXc,+BAYdC,OAAQ,CACNC,QAZY,mCAaZC,SAZa,WAgBJT,EAAW,mCAAG,sGACFI,EAfL,uBAcO,uBACjBF,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXQ,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAnBP,gBAmB2B,CACzCG,OAAQ,CACNI,MAAOA,KAHiB,uBACpBT,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdU,EAAU,mCAAG,WAAMC,GAAN,kFAClBC,EADkB,iBACKD,GADL,SAGDT,EAASU,GAHR,uBAGhBZ,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,sDAOVa,EAAU,mCAAG,WAAMF,GAAN,kFAClBG,EADkB,iBACKH,EADL,qBAGDT,EAASY,GAHR,uBAGhBd,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,sDAOVe,EAAU,mCAAG,WAAMJ,GAAN,kFAClBK,EADkB,iBACKL,EADL,qBAGDT,EAASc,GAHR,uBAGhBhB,EAHgB,EAGhBA,KAHgB,kBAIjBA,GAJiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/TrendingMovies/TrendingMovies.module.css?c983","components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx","service/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TrendingMovies_title__-nJit\",\"moviesList\":\"TrendingMovies_moviesList__Pggxw\",\"movieItem\":\"TrendingMovies_movieItem__meCFr\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './TrendingMovies.module.css';\nimport placeholder from '../../imgs/posterPlaceholder.jpg';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgUrl = `https://image.tmdb.org/t/p/w400`;\n  const imgPlaceholder = placeholder;\n\n  return (\n    <>\n      {movies && (\n        <div>\n          <h1 className={css.title}>TRENDING TODAY</h1>\n          <ul className={css.moviesList}>\n            {movies.map(({ id, poster_path, title }) => (\n              <li key={id}>\n                <Link\n                  className={css.movieItem}\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                >\n                  <img\n                    src={\n                      poster_path ? imgUrl.concat(poster_path) : imgPlaceholder\n                    }\n                    alt={title}\n                    width=\"300\"\n                    height=\"450\"\n                  />\n                  <h3>{title}</h3>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrending } from 'service/fetchMovies';\nimport MoviesList from 'components/TrendingMovies/TrendingMovies';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    getTrending().then(data => {\n      setTrends(data.results);\n    });\n  }, []);\n\n  return <MoviesList movies={trends} />;\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a9fe09abb8f595fb2934da0c1fe008dc';\nconst language = 'en-US';\n\nconst trendingUrl = '/trending/movie/day';\nconst searchUrl = '/search/movie';\n// const detailsUrl = `/movie/${movieId}`;\n// const creditsUrl = `/movie/${movieId}/credits`;\n// const reviewsUrl = `/movie/${movieId}/reviews`;\n\nconst instance = axios.create({\n  baseURL: baseUrl,\n  params: {\n    api_key: API_KEY,\n    language: language,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance(trendingUrl);\n  return data;\n};\n\nexport const getMovieSearch = async query => {\n  const { data } = await instance(searchUrl, {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getDetails = async movieId => {\n  const detailsUrl = `/movie/${movieId}`;\n\n  const { data } = await instance(detailsUrl);\n  return data;\n};\n\nexport const getCredits = async movieId => {\n  const creditsUrl = `/movie/${movieId}/credits`;\n\n  const { data } = await instance(creditsUrl);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const reviewsUrl = `/movie/${movieId}/reviews`;\n\n  const { data } = await instance(reviewsUrl);\n  return data;\n};\n"],"names":["movies","location","useLocation","imgPlaceholder","placeholder","className","css","map","id","poster_path","title","to","state","from","src","concat","alt","width","height","useState","trends","setTrends","useEffect","getTrending","then","data","results","instance","axios","baseURL","params","api_key","language","getMovieSearch","query","getDetails","movieId","detailsUrl","getCredits","creditsUrl","getReviews","reviewsUrl"],"sourceRoot":""}